package ec.edu.espe.view;

import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Ernesto Pérez M. 
 */
public class Frm_BubbleSort extends javax.swing.JFrame {

    int i = 0;
    int j = 0;
    int k = 0;
    int x = 0;
    int y = 0;
    int s = 0;
    int aux = 0;
    int inicio = 0;
    int contador = 0;
    String mensaje = "";
    String entrada1 = "";
    String temporal = "";
    String datos = "";
    String espacio[] = {" "};
    ArrayList burbuja = new ArrayList();
    ArrayList memoria = new ArrayList();

    public void LimpiarTxt() {
        jTextFieldEntrada.setText("");
    }

    /**
     * Creates new form Burbuja
     */
    public Frm_BubbleSort() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    //metodo para cambiar el icono.
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/icono.png"));
        return retValue;
    }//aqui termina

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldEntrada = new javax.swing.JTextField();
        jButtonGuardar = new javax.swing.JButton();
        jButtonContenido = new javax.swing.JButton();
        jButtonOrdenar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setText("Bubble Sort");

        jButtonGuardar.setText("Save");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jButtonContenido.setText("Content");
        jButtonContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonContenidoActionPerformed(evt);
            }
        });

        jButtonOrdenar.setText("Order");
        jButtonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarActionPerformed(evt);
            }
        });

        jButtonNuevo.setText("New");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });

        jButtonSalir.setText("Exit");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonContenido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 185, Short.MAX_VALUE)
                        .addComponent(jButtonOrdenar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalir)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addComponent(jTextFieldEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButtonContenido)
                    .addComponent(jButtonOrdenar))
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNuevo)
                    .addComponent(jButtonSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        try {
            datos = jTextFieldEntrada.getText();//entrada de datos
            datos += " ";//sumo un espacio para guardar el ultimo dato en el arreglo

            //Llenado del arreglo
            for (i = 0; i < datos.length(); i++) {

                entrada1 = datos.substring(i, i + 1);//extrae caracter por caracter

                if (!entrada1.equals(espacio[0]))//si es diferente a un espacio se ejecuta
                {
                    temporal += entrada1;
                } else if (entrada1.equals(espacio[0])) { //si es igual a un espacio se ejecuta
                    burbuja.add(temporal); //deposita en el arreglo
                    temporal = "";
                    k++;
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Datos invalidos, porfavor vuelve a intentar");
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonContenidoActionPerformed
        //imprimir contenido del arreglo
        for (j = 0; j < k; j++) {
            mensaje += ((j + 1) + "-: " + burbuja.get(j) + "\n");
        }

        JOptionPane.showMessageDialog(null, mensaje);
        mensaje = "";
    }//GEN-LAST:event_jButtonContenidoActionPerformed

    private void jButtonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarActionPerformed
        try {
            //metodo de la burbuja              
            for (x = 0; x < k; x++) {//la veces que encuentra un espacio es k
                for (y = 0; y < k; y++) {//le pongo un limite de k veces porque es el numero de datos que entro
                    int uno = Integer.parseInt(burbuja.get(x).toString());//convierto los String a enteros para poder compararlos con el if
                    int dos = Integer.parseInt(burbuja.get(y).toString());

                    if (uno <= dos) {
                        //aux = burbuja[x];
                        aux = Integer.parseInt(burbuja.get(x).toString());
                        //burbuja[x]=burbuja[y];                                                  
                        burbuja.set(x, burbuja.get(y));
                        //burbuja[y]=aux;
                        burbuja.set(y, aux);
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "¡Listo!, los números se han ordenado");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al introducir datos, porfavor verifica los números o espacios");
        }
    }//GEN-LAST:event_jButtonOrdenarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        LimpiarTxt();
        for (i = 0; i < burbuja.size(); i++) {
            burbuja.set(i, (""));
            burbuja.remove(i--);
        }

        i = 0;
        j = 0;
        k = 0;
        x = 0;
        y = 0;
        aux = 0;
        inicio = 0;
        contador = 0;
        mensaje = "";
        entrada1 = "";
        temporal = "";
        datos = "";

        jTextFieldEntrada.requestFocus();
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frm_BubbleSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frm_BubbleSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frm_BubbleSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_BubbleSort.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frm_BubbleSort().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonContenido;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonOrdenar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldEntrada;
    // End of variables declaration//GEN-END:variables
}
